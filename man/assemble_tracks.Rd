% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_asemble_tracks.R
\name{assemble_tracks}
\alias{assemble_tracks}
\title{assemble_tracks}
\usage{
assemble_tracks(
  plot_list,
  query_gr,
  rel_heights = rep(1, length(plot_list)),
  x_scale = c("bp", "kbp", "Mbp")[2],
  final_ggplot_FUN_list = NULL
)
}
\arguments{
\item{plot_list}{List. Contains ggplots and/or grobs. These should have have
been generated by ssvTracks::track_* family of functions or be appropriate
for visualization in the same genomic region defined by query_gr.}

\item{query_gr}{GRanges. Most often the same query_gr used to generate
tracks.  A smaller region to view in detail is also valid.}

\item{rel_heights}{Passed to rel_heights in cowplot::plot_grid. Controls
relative heights of component plots.  Should be same length as plot_list.}

\item{final_ggplot_FUN_list}{list of functions to apply prior to width
synchronization. list items should have names matching the position of
input plot in plot_list. y-axis customization may be lost in preparation to
this step and this list provides a mechanism to reapply them. Example:
final_ggplot_FUN_list = list("2" = function(p)p+scale_y_continuous(limits =
c(2.5, 20), breaks = c(20)))}
}
\value{
A combined ggplot of tracks stacked vertically with consistent
  x-axes.
}
\description{
assemble_tracks
}
\examples{
gtf_file = system.file(package = "ssvTracks", "extdata/ESR1_exons.gtf", mustWork = TRUE)
ref_gr = rtracklayer::import.gff(gtf_file)
query_gr = range(ref_gr)

p_ref = track_gene_transcripts(ref_gr,
  sel_gene_name = "ESR1",
  intron_thickness = 2,
  exon_height = .8,
  show_tss = TRUE)

bam_files = dir(system.file(package = "ssvTracks", "extdata"), full.names = TRUE, pattern = "^M.+RNA.+bam$")
bam_files = bam_files[!grepl("_wt_", bam_files) & !grepl("_RUNX1-ko1_", bam_files)]
bam_files_df = data.frame(
     file = bam_files,
     sample = sub("_.+", "", basename(bam_files)))
p_rna = track_rna.SE(bam_files_df, query_gr = query_gr, fill_mapping = "black")

assemble_tracks(list(p_rna, p_ref), query_gr)

assemble_tracks(list(p_ref, p_rna + scale_y_continuous(limits = c(50, 200), breaks = 200)), query_gr)
assemble_tracks(list(p_ref, p_rna + scale_y_continuous(limits = c(50, 200), breaks = 200)), query_gr,
  final_ggplot_FUN_list = list("2" = function(p){p + scale_y_continuous(limits = c(50, 250), breaks = 250)}))

}
